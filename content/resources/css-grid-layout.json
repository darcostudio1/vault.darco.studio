{
  "id": "css-grid-layout",
  "title": "CSS Grid Layout Guide",
  "slug": "css-grid-layout",
  "description": "A comprehensive guide to CSS Grid Layout with examples and best practices for creating responsive grid layouts.",
  "tags": ["CSS", "Grid", "Layout", "Responsive"],
  "createdAt": "2023-04-10T14:30:00Z",
  "updatedAt": "2023-04-15T09:45:00Z",
  "image": "https://images.unsplash.com/photo-1517134191118-9d595e4c8c2b?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=500&q=80",
  "notes": "CSS Grid Layout is a two-dimensional layout system designed specifically for the web. It allows you to organize content into rows and columns and has many features that make building complex layouts straightforward. This resource covers the fundamentals and advanced techniques for mastering CSS Grid.",
  "content": {
    "html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>CSS Grid Example</title>\n  <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n  <div class=\"grid-container\">\n    <header class=\"header\">Header</header>\n    <nav class=\"sidebar\">Sidebar</nav>\n    <main class=\"main-content\">\n      <h1>Main Content</h1>\n      <p>This is the main content area of our grid layout example.</p>\n      <div class=\"card-grid\">\n        <div class=\"card\">Card 1</div>\n        <div class=\"card\">Card 2</div>\n        <div class=\"card\">Card 3</div>\n        <div class=\"card\">Card 4</div>\n        <div class=\"card\">Card 5</div>\n        <div class=\"card\">Card 6</div>\n      </div>\n    </main>\n    <aside class=\"sidebar-right\">Right Sidebar</aside>\n    <footer class=\"footer\">Footer</footer>\n  </div>\n</body>\n</html>",
    "css": "/* Basic reset */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: Arial, sans-serif;\n  line-height: 1.6;\n  color: #333;\n  background-color: #f4f4f4;\n}\n\n/* Main grid container */\n.grid-container {\n  display: grid;\n  grid-template-columns: 1fr 3fr 1fr;\n  grid-template-rows: auto 1fr auto;\n  grid-template-areas:\n    \"header header header\"\n    \"sidebar main sidebar-right\"\n    \"footer footer footer\";\n  min-height: 100vh;\n  gap: 10px;\n  padding: 10px;\n}\n\n/* Grid areas */\n.header {\n  grid-area: header;\n  background-color: #2c3e50;\n  color: white;\n  padding: 20px;\n  text-align: center;\n}\n\n.sidebar {\n  grid-area: sidebar;\n  background-color: #3498db;\n  color: white;\n  padding: 20px;\n}\n\n.main-content {\n  grid-area: main;\n  background-color: white;\n  padding: 20px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.sidebar-right {\n  grid-area: sidebar-right;\n  background-color: #3498db;\n  color: white;\n  padding: 20px;\n}\n\n.footer {\n  grid-area: footer;\n  background-color: #2c3e50;\n  color: white;\n  padding: 20px;\n  text-align: center;\n}\n\n/* Nested grid for cards */\n.card-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n  margin-top: 20px;\n}\n\n.card {\n  background-color: #f9f9f9;\n  border: 1px solid #ddd;\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n  .grid-container {\n    grid-template-columns: 1fr;\n    grid-template-areas:\n      \"header\"\n      \"sidebar\"\n      \"main\"\n      \"sidebar-right\"\n      \"footer\";\n  }\n}",
    "js": "// This script demonstrates how to dynamically manipulate a CSS Grid layout\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Get references to grid elements\n  const gridContainer = document.querySelector('.grid-container');\n  const cards = document.querySelectorAll('.card');\n  \n  // Function to toggle a compact layout\n  function toggleCompactLayout() {\n    gridContainer.classList.toggle('compact');\n    \n    if (gridContainer.classList.contains('compact')) {\n      // Change to a more compact layout\n      gridContainer.style.gridTemplateAreas = '\n        \"header header\"\n        \"sidebar main\"\n        \"sidebar-right sidebar-right\"\n        \"footer footer\"';\n      gridContainer.style.gridTemplateColumns = '1fr 3fr';\n    } else {\n      // Revert to original layout\n      gridContainer.style.gridTemplateAreas = '\n        \"header header header\"\n        \"sidebar main sidebar-right\"\n        \"footer footer footer\"';\n      gridContainer.style.gridTemplateColumns = '1fr 3fr 1fr';\n    }\n  }\n  \n  // Add hover effects to cards\n  cards.forEach(card => {\n    card.addEventListener('mouseenter', () => {\n      card.style.transform = 'scale(1.05)';\n      card.style.transition = 'transform 0.3s ease';\n    });\n    \n    card.addEventListener('mouseleave', () => {\n      card.style.transform = 'scale(1)';\n    });\n  });\n  \n  // Create a button to toggle layout\n  const toggleButton = document.createElement('button');\n  toggleButton.textContent = 'Toggle Compact Layout';\n  toggleButton.style.position = 'fixed';\n  toggleButton.style.bottom = '20px';\n  toggleButton.style.right = '20px';\n  toggleButton.style.padding = '10px';\n  toggleButton.style.backgroundColor = '#3498db';\n  toggleButton.style.color = 'white';\n  toggleButton.style.border = 'none';\n  toggleButton.style.borderRadius = '5px';\n  toggleButton.style.cursor = 'pointer';\n  \n  toggleButton.addEventListener('click', toggleCompactLayout);\n  \n  document.body.appendChild(toggleButton);\n});"
  }
} 