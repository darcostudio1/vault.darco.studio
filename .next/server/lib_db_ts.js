"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "lib_db_ts";
exports.ids = ["lib_db_ts"];
exports.modules = {

/***/ "./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   query: () => (/* binding */ query)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n\n// Initialize Supabase client\nconst supabaseUrl = process.env.SUPABASE_URL || \"\";\nconst supabaseKey = process.env.SUPABASE_ANON_KEY || \"\";\n// Create Supabase client with better error handling\nconst createSupabaseClient = ()=>{\n    if (!supabaseUrl || !supabaseKey) {\n        console.error(\"Missing Supabase URL or key in environment variables\");\n        // Return a mock client that logs errors instead of crashing\n        return {\n            rpc: ()=>Promise.resolve({\n                    data: [],\n                    error: new Error(\"Supabase client not initialized\")\n                }),\n            from: ()=>({\n                    select: ()=>({\n                            eq: ()=>({\n                                    single: ()=>Promise.resolve({\n                                            data: null,\n                                            error: new Error(\"Supabase client not initialized\")\n                                        }),\n                                    maybeSingle: ()=>Promise.resolve({\n                                            data: null,\n                                            error: new Error(\"Supabase client not initialized\")\n                                        })\n                                }),\n                            order: ()=>({}),\n                            limit: ()=>({})\n                        }),\n                    insert: ()=>Promise.resolve({\n                            data: null,\n                            error: new Error(\"Supabase client not initialized\")\n                        }),\n                    update: ()=>Promise.resolve({\n                            data: null,\n                            error: new Error(\"Supabase client not initialized\")\n                        }),\n                    delete: ()=>Promise.resolve({\n                            data: null,\n                            error: new Error(\"Supabase client not initialized\")\n                        })\n                })\n        };\n    }\n    try {\n        // Validate URL format\n        try {\n            new URL(supabaseUrl);\n        } catch (e) {\n            console.error(\"Invalid Supabase URL format:\", supabaseUrl);\n            throw new Error(`Invalid Supabase URL format: ${supabaseUrl}`);\n        }\n        return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseKey);\n    } catch (error) {\n        console.error(\"Error initializing Supabase client:\", error);\n        throw error;\n    }\n};\nconst supabase = createSupabaseClient();\n// Helper function to execute SQL queries\nasync function query(q, values = []) {\n    try {\n        // Replace placeholders (?) with $1, $2, etc. for Postgres\n        let queryText = q;\n        let paramIndex = 1;\n        // Replace MySQL-style placeholders with PostgreSQL-style\n        queryText = queryText.replace(/\\?/g, ()=>`$${paramIndex++}`);\n        // Execute the query using Supabase\n        const { data, error } = await supabase.rpc(\"execute_sql\", {\n            query_text: queryText,\n            query_params: values\n        });\n        if (error) throw error;\n        return data || [];\n    } catch (error) {\n        console.error(\"Database query error:\", error);\n        throw error;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    query,\n    supabase\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxRDtBQUVyRCw2QkFBNkI7QUFDN0IsTUFBTUMsY0FBY0MsUUFBUUMsR0FBRyxDQUFDQyxZQUFZLElBQUk7QUFDaEQsTUFBTUMsY0FBY0gsUUFBUUMsR0FBRyxDQUFDRyxpQkFBaUIsSUFBSTtBQUVyRCxvREFBb0Q7QUFDcEQsTUFBTUMsdUJBQXVCO0lBQzNCLElBQUksQ0FBQ04sZUFBZSxDQUFDSSxhQUFhO1FBQ2hDRyxRQUFRQyxLQUFLLENBQUM7UUFDZCw0REFBNEQ7UUFDNUQsT0FBTztZQUNMQyxLQUFLLElBQU1DLFFBQVFDLE9BQU8sQ0FBQztvQkFBRUMsTUFBTSxFQUFFO29CQUFFSixPQUFPLElBQUlLLE1BQU07Z0JBQW1DO1lBQzNGQyxNQUFNLElBQU87b0JBQ1hDLFFBQVEsSUFBTzs0QkFDYkMsSUFBSSxJQUFPO29DQUNUQyxRQUFRLElBQU1QLFFBQVFDLE9BQU8sQ0FBQzs0Q0FBRUMsTUFBTTs0Q0FBTUosT0FBTyxJQUFJSyxNQUFNO3dDQUFtQztvQ0FDaEdLLGFBQWEsSUFBTVIsUUFBUUMsT0FBTyxDQUFDOzRDQUFFQyxNQUFNOzRDQUFNSixPQUFPLElBQUlLLE1BQU07d0NBQW1DO2dDQUN2Rzs0QkFDQU0sT0FBTyxJQUFPLEVBQUM7NEJBQ2ZDLE9BQU8sSUFBTyxFQUFDO3dCQUNqQjtvQkFDQUMsUUFBUSxJQUFNWCxRQUFRQyxPQUFPLENBQUM7NEJBQUVDLE1BQU07NEJBQU1KLE9BQU8sSUFBSUssTUFBTTt3QkFBbUM7b0JBQ2hHUyxRQUFRLElBQU1aLFFBQVFDLE9BQU8sQ0FBQzs0QkFBRUMsTUFBTTs0QkFBTUosT0FBTyxJQUFJSyxNQUFNO3dCQUFtQztvQkFDaEdVLFFBQVEsSUFBTWIsUUFBUUMsT0FBTyxDQUFDOzRCQUFFQyxNQUFNOzRCQUFNSixPQUFPLElBQUlLLE1BQU07d0JBQW1DO2dCQUNsRztRQUNGO0lBQ0Y7SUFFQSxJQUFJO1FBQ0Ysc0JBQXNCO1FBQ3RCLElBQUk7WUFDRixJQUFJVyxJQUFJeEI7UUFDVixFQUFFLE9BQU95QixHQUFHO1lBQ1ZsQixRQUFRQyxLQUFLLENBQUMsZ0NBQWdDUjtZQUM5QyxNQUFNLElBQUlhLE1BQU0sQ0FBQyw2QkFBNkIsRUFBRWIsWUFBWSxDQUFDO1FBQy9EO1FBRUEsT0FBT0QsbUVBQVlBLENBQUNDLGFBQWFJO0lBQ25DLEVBQUUsT0FBT0ksT0FBTztRQUNkRCxRQUFRQyxLQUFLLENBQUMsdUNBQXVDQTtRQUNyRCxNQUFNQTtJQUNSO0FBQ0Y7QUFFQSxNQUFNa0IsV0FBV3BCO0FBRWpCLHlDQUF5QztBQUNsQyxlQUFlcUIsTUFDcEJDLENBQVMsRUFDVEMsU0FBOEIsRUFBRTtJQUVoQyxJQUFJO1FBQ0YsMERBQTBEO1FBQzFELElBQUlDLFlBQVlGO1FBQ2hCLElBQUlHLGFBQWE7UUFFakIseURBQXlEO1FBQ3pERCxZQUFZQSxVQUFVRSxPQUFPLENBQUMsT0FBTyxJQUFNLENBQUMsQ0FBQyxFQUFFRCxhQUFhLENBQUM7UUFFN0QsbUNBQW1DO1FBQ25DLE1BQU0sRUFBRW5CLElBQUksRUFBRUosS0FBSyxFQUFFLEdBQUcsTUFBTWtCLFNBQVNqQixHQUFHLENBQUMsZUFBZTtZQUN4RHdCLFlBQVlIO1lBQ1pJLGNBQWNMO1FBQ2hCO1FBRUEsSUFBSXJCLE9BQU8sTUFBTUE7UUFDakIsT0FBT0ksUUFBUSxFQUFFO0lBQ25CLEVBQUUsT0FBT0osT0FBTztRQUNkRCxRQUFRQyxLQUFLLENBQUMseUJBQXlCQTtRQUN2QyxNQUFNQTtJQUNSO0FBQ0Y7QUFFQSxpRUFBZTtJQUFFbUI7SUFBT0Q7QUFBUyxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYXJjby1kZXYtdmF1bHQvLi9saWIvZGIudHM/MWRmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnO1xuXG4vLyBJbml0aWFsaXplIFN1cGFiYXNlIGNsaWVudFxuY29uc3Qgc3VwYWJhc2VVcmwgPSBwcm9jZXNzLmVudi5TVVBBQkFTRV9VUkwgfHwgJyc7XG5jb25zdCBzdXBhYmFzZUtleSA9IHByb2Nlc3MuZW52LlNVUEFCQVNFX0FOT05fS0VZIHx8ICcnO1xuXG4vLyBDcmVhdGUgU3VwYWJhc2UgY2xpZW50IHdpdGggYmV0dGVyIGVycm9yIGhhbmRsaW5nXG5jb25zdCBjcmVhdGVTdXBhYmFzZUNsaWVudCA9ICgpID0+IHtcbiAgaWYgKCFzdXBhYmFzZVVybCB8fCAhc3VwYWJhc2VLZXkpIHtcbiAgICBjb25zb2xlLmVycm9yKCdNaXNzaW5nIFN1cGFiYXNlIFVSTCBvciBrZXkgaW4gZW52aXJvbm1lbnQgdmFyaWFibGVzJyk7XG4gICAgLy8gUmV0dXJuIGEgbW9jayBjbGllbnQgdGhhdCBsb2dzIGVycm9ycyBpbnN0ZWFkIG9mIGNyYXNoaW5nXG4gICAgcmV0dXJuIHtcbiAgICAgIHJwYzogKCkgPT4gUHJvbWlzZS5yZXNvbHZlKHsgZGF0YTogW10sIGVycm9yOiBuZXcgRXJyb3IoJ1N1cGFiYXNlIGNsaWVudCBub3QgaW5pdGlhbGl6ZWQnKSB9KSxcbiAgICAgIGZyb206ICgpID0+ICh7XG4gICAgICAgIHNlbGVjdDogKCkgPT4gKHtcbiAgICAgICAgICBlcTogKCkgPT4gKHtcbiAgICAgICAgICAgIHNpbmdsZTogKCkgPT4gUHJvbWlzZS5yZXNvbHZlKHsgZGF0YTogbnVsbCwgZXJyb3I6IG5ldyBFcnJvcignU3VwYWJhc2UgY2xpZW50IG5vdCBpbml0aWFsaXplZCcpIH0pLFxuICAgICAgICAgICAgbWF5YmVTaW5nbGU6ICgpID0+IFByb21pc2UucmVzb2x2ZSh7IGRhdGE6IG51bGwsIGVycm9yOiBuZXcgRXJyb3IoJ1N1cGFiYXNlIGNsaWVudCBub3QgaW5pdGlhbGl6ZWQnKSB9KSxcbiAgICAgICAgICB9KSxcbiAgICAgICAgICBvcmRlcjogKCkgPT4gKHt9KSxcbiAgICAgICAgICBsaW1pdDogKCkgPT4gKHt9KSxcbiAgICAgICAgfSksXG4gICAgICAgIGluc2VydDogKCkgPT4gUHJvbWlzZS5yZXNvbHZlKHsgZGF0YTogbnVsbCwgZXJyb3I6IG5ldyBFcnJvcignU3VwYWJhc2UgY2xpZW50IG5vdCBpbml0aWFsaXplZCcpIH0pLFxuICAgICAgICB1cGRhdGU6ICgpID0+IFByb21pc2UucmVzb2x2ZSh7IGRhdGE6IG51bGwsIGVycm9yOiBuZXcgRXJyb3IoJ1N1cGFiYXNlIGNsaWVudCBub3QgaW5pdGlhbGl6ZWQnKSB9KSxcbiAgICAgICAgZGVsZXRlOiAoKSA9PiBQcm9taXNlLnJlc29sdmUoeyBkYXRhOiBudWxsLCBlcnJvcjogbmV3IEVycm9yKCdTdXBhYmFzZSBjbGllbnQgbm90IGluaXRpYWxpemVkJykgfSksXG4gICAgICB9KSxcbiAgICB9O1xuICB9XG4gIFxuICB0cnkge1xuICAgIC8vIFZhbGlkYXRlIFVSTCBmb3JtYXRcbiAgICB0cnkge1xuICAgICAgbmV3IFVSTChzdXBhYmFzZVVybCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc29sZS5lcnJvcignSW52YWxpZCBTdXBhYmFzZSBVUkwgZm9ybWF0OicsIHN1cGFiYXNlVXJsKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBTdXBhYmFzZSBVUkwgZm9ybWF0OiAke3N1cGFiYXNlVXJsfWApO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gY3JlYXRlQ2xpZW50KHN1cGFiYXNlVXJsLCBzdXBhYmFzZUtleSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgaW5pdGlhbGl6aW5nIFN1cGFiYXNlIGNsaWVudDonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbmNvbnN0IHN1cGFiYXNlID0gY3JlYXRlU3VwYWJhc2VDbGllbnQoKTtcblxuLy8gSGVscGVyIGZ1bmN0aW9uIHRvIGV4ZWN1dGUgU1FMIHF1ZXJpZXNcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBxdWVyeShcbiAgcTogc3RyaW5nLFxuICB2YWx1ZXM6IChzdHJpbmcgfCBudW1iZXIpW10gPSBbXVxuKTogUHJvbWlzZTxhbnk+IHtcbiAgdHJ5IHtcbiAgICAvLyBSZXBsYWNlIHBsYWNlaG9sZGVycyAoPykgd2l0aCAkMSwgJDIsIGV0Yy4gZm9yIFBvc3RncmVzXG4gICAgbGV0IHF1ZXJ5VGV4dCA9IHE7XG4gICAgbGV0IHBhcmFtSW5kZXggPSAxO1xuICAgIFxuICAgIC8vIFJlcGxhY2UgTXlTUUwtc3R5bGUgcGxhY2Vob2xkZXJzIHdpdGggUG9zdGdyZVNRTC1zdHlsZVxuICAgIHF1ZXJ5VGV4dCA9IHF1ZXJ5VGV4dC5yZXBsYWNlKC9cXD8vZywgKCkgPT4gYCQke3BhcmFtSW5kZXgrK31gKTtcbiAgICBcbiAgICAvLyBFeGVjdXRlIHRoZSBxdWVyeSB1c2luZyBTdXBhYmFzZVxuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLnJwYygnZXhlY3V0ZV9zcWwnLCB7IFxuICAgICAgcXVlcnlfdGV4dDogcXVlcnlUZXh0LFxuICAgICAgcXVlcnlfcGFyYW1zOiB2YWx1ZXNcbiAgICB9KTtcbiAgICBcbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yO1xuICAgIHJldHVybiBkYXRhIHx8IFtdO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0RhdGFiYXNlIHF1ZXJ5IGVycm9yOicsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB7IHF1ZXJ5LCBzdXBhYmFzZSB9O1xuIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsInN1cGFiYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIlNVUEFCQVNFX1VSTCIsInN1cGFiYXNlS2V5IiwiU1VQQUJBU0VfQU5PTl9LRVkiLCJjcmVhdGVTdXBhYmFzZUNsaWVudCIsImNvbnNvbGUiLCJlcnJvciIsInJwYyIsIlByb21pc2UiLCJyZXNvbHZlIiwiZGF0YSIsIkVycm9yIiwiZnJvbSIsInNlbGVjdCIsImVxIiwic2luZ2xlIiwibWF5YmVTaW5nbGUiLCJvcmRlciIsImxpbWl0IiwiaW5zZXJ0IiwidXBkYXRlIiwiZGVsZXRlIiwiVVJMIiwiZSIsInN1cGFiYXNlIiwicXVlcnkiLCJxIiwidmFsdWVzIiwicXVlcnlUZXh0IiwicGFyYW1JbmRleCIsInJlcGxhY2UiLCJxdWVyeV90ZXh0IiwicXVlcnlfcGFyYW1zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/db.ts\n");

/***/ })

};
;